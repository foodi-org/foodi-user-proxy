syntax = "v1"

import (
	"foodi-account.api"
	"foodi-user.api"
	"foodi-article.api"
	"foodi-common.api"
	"foodi-base.api"
	"jwt.api"
)

info (
	title:  "foodi user proxy api"
	desc:   "api 入口文件"
	author: "odinfor"
	email:  "747069227@qq.com"
)

@server (
	group:  account
	prefix: /v1
)
service foodi_user_proxy {
	@doc "get user token"
	@handler jwt
	post /user/token (JwtTokenRequest) returns (JwtTokenResponse)

	@doc "user login"
	@handler login
	post /login (LoginRequest) returns (LoginReply)

	@doc "user register"
	@handler register
	post /path (RegisterRequest) returns (RegisterReply)
}

@server (
	jwt:    Auth
	group:  user
	prefix: /v1
)
service foodi_user_proxy {
	@doc "获取用户基础信息"
	@handler userInfo
	get /user/baseInfo (UserBaseInfoRequest) returns (UserBaseInfoReply)

	@doc "获取用户详细信息"
	@handler userDetailInfo
	get /user/detailInfo (UserBaseInfoRequest) returns (UserDetailReply)

	@doc "更新用户头像"
	@handler updateUserImage
	put /user/updateImage (UpdateImageRequest) returns (Base)

	@doc "更新用户性别"
	@handler updateUserGender
	put /user/gender (UpdateGenderRequest) returns (Base)

	@doc "更新用户生日"
	@handler updateUserBirthday
	put /user/birthday (UpdateBirthdayRequest)

	@doc "更新用户昵称"
	@handler updayeUserNikename
	put /user/nikename (UpdateNikenameRequest) returns (Base)

	@doc "更新用户所在地域"
	@handler updateUserRegion
	put /user/region (UpdateRegionRequest) returns (Base)
}

@server (
	jwt:    Auth
	group:  article
	prefix: /v1
)
service foodi_user_proxy {
	@doc "发布文章"
	@handler articleAction
	post /add (AddRequest) returns (AddReply)
}

